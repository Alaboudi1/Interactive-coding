<!DOCTYPE html>
<html lang="en">

<head>
  <title>Plnkr.co</title>
  <style type="text/css" media="screen">
    #editor, html, body {
      height: 100%;
      margin: 0;
    }
    span.widget.stack-message {
      display: inline-block;
      border: solid 1px gold;
      margin: -1px 6px;
      background: rgba(226, 214, 57, 0.5);
      border-radius: 6px;
      pointer-events: auto;
    }
  </style>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"/>
  <script src="https://ajaxorg.github.io/ace-builds/src-noconflict/ace.js">
  </script>
</head>

<body>
  <div id="editor"></div>
  <script>
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/chrome");
    editor.session.setMode("ace/mode/html");
    editor.setValue(document.documentElement.outerHTML)
    
    function updateLines(e, renderer) {
        var textLayer = renderer.$textLayer;
        var config = textLayer.config;
        var session = textLayer.session;
        
        if (!session.lineAnnotations) return;
        
        var first = config.firstRow;
        var last = config.lastRow;
        
        var lineElements = textLayer.element.childNodes;
        var lineElementsIdx = 0;
        
        var row = first;
        var foldLine = session.getNextFoldLine(row);
        var foldStart = foldLine ? foldLine.start.row : Infinity;
        
        var useGroups = textLayer.$useLineGroups();
        
        while (true) {
            if (row > foldStart) {
                row = foldLine.end.row + 1;
                foldLine = textLayer.session.getNextFoldLine(row, foldLine);
                foldStart = foldLine ? foldLine.start.row : Infinity;
            }
            if (row > last)
                break;
            
            var lineElement = lineElements[lineElementsIdx++];
            if (lineElement && session.lineAnnotations[row]) {
                if (useGroups) lineElement = lineElement.lastChild;
                var widget,anch, a = session.lineAnnotations[row];
                if (!a.element) {
                    anch =   document.createElement("a");
                    a.href="#";
                    widget = document.createElement("span");
                    widget.textContent = "";
                    widget.className = "glyphicon glyphicon-info-sign" + (a.more ? " more" : "");
                    widget.annotation = a;
                    session.lineAnnotations[row].element = anch;
                    anch.appendChild(widget)
                }
                else anch = a.element;
                
                lineElement.appendChild(anch);
            }
            row++;
        }
    }
    editor.renderer.setScrollMargin(1, 1, 0, 0)
    editor.renderer.on("afterRender", updateLines)
    editor.session.lineAnnotations = {
      0: {display: "line 0"},
      8: {display: "line 6"},
      13: {display: "line 13"}
    }
  var onMouseDown = function(e) {
      var widget = e.target;
      if (widget.classList.contains("widget")) {
          alert("clicked on widget")
          e.stopPropagation();
      }
  };
  editor.container.addEventListener("mousedown", onMouseDown, true);
  </script>
</body>

</html>